
package tetris3;

import org.encog.ml.MLEncodable;
import org.encog.ml.MLMethod;
import org.encog.ml.factory.MLMethodFactory;
import org.encog.persist.EncogDirectoryPersistence;


// Code generated by Encog v3.2.0
// Generation Date: Sat Feb 08 16:28:29 CST 2014
// Generated code may be used freely
// http://www.heatonresearch.com/encog


public class NN3Values {
    public static final double[] WEIGHTS = {
        0.2258781233,0.3042753657,-197.527263231,-0.3045744358,0.3498138234,0.1745177265,0.7777293727,0.1064080928,0.6143216985,0.314798632,
        0.4730849534,0.7860029925,0.3241935801,0.5026816521,0.502989619,0.7959537727,0.0081303819,0.7266614511,0.0159042643,0.0632555145,
        0.6541665234,0.3537867411,0.5597219824,25.0001427273,0.4677541178,0.0650206442,0.0381609636,-0.0367052036,-0.0652006766,-0.3139963294,
        -6.2030306965
    };

    public static MLMethod createNetwork() {
        MLMethodFactory methodFactory = new MLMethodFactory();
        MLMethod result = methodFactory.create("feedforward","8:B->TANH->3:B->TANH->1", 8, 1);
        ((MLEncodable)result).decodeFromArray(WEIGHTS);
        return result;
    }

    
}
