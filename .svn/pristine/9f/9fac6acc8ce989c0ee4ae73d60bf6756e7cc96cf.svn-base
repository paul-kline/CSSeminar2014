/*
 * To change this template, choose Tools | Templates
 * and open the template in the editor.
 *//*
 * To change this template, choose Tools | Templates
 * and open the template in the editor.
 */
package tetrispaul4;

import NeuralThings.PaulNetworkFactory;
import NeuralThings.PaulNetworkFactory.NNCodes;
import TemplateMethod.AbstractGame;
import TetrisFactory.ViewTopChoices;
import TetrisFactory.WeightsWithNNTetris;
import TetrisHelpful.BoardConverter;

import TetrisHelpful.TetrisReader;
import java.awt.BorderLayout;
import java.awt.Color;
import java.awt.Component;
import java.awt.Container;
import java.awt.Frame;
import java.awt.GridBagConstraints;
import java.awt.GridLayout;
import java.awt.LayoutManager;
import java.awt.PopupMenu;
import java.awt.event.WindowAdapter;
import java.awt.event.WindowEvent;
import java.util.LinkedList;
import javax.swing.ComboBoxModel;
import javax.swing.JButton;
import javax.swing.JFrame;
import javax.swing.JLabel;
import javax.swing.JOptionPane;
import javax.swing.SwingConstants;
import javax.swing.plaf.basic.BasicSplitPaneUI;
import net.percederberg.tetris.Game;
import net.percederberg.tetris.SquareBoard;
import sun.awt.HorizBagLayout;
import tetris3.PlacementDecider;

/**
 *
 * @author paul.kline
 */
public class WeightSelector extends javax.swing.JFrame {

    LinkedList<Component> thingsIveAdded = new LinkedList<>();
    private SpecificAskNNConditions mySpecialNNConditions;
    private JFrame myTopChoiceViewer;
    private JLabel[] lblRatings;

    public JFrame getMyTopChoiceViewer() {
        return myTopChoiceViewer;
    }
    private SquareBoard[] allboards;

    /**
     * Creates new form WeightSelector
     *
     * @param CO The controller object to use for communication with this
     * WeightSelector
     */
    public WeightSelector(ControllerObject CO) {

        man();
        this.setLocation(500, 500);
        myCO = CO;
        initComponents();
        SetUseNNCheckBox();
        PopulateNNList();
        PopulateWeightList();
        mySpecialNNConditions = new SpecificAskNNConditions(myCO);
        jCheckBox3.setSelected(true);
        jRadioButton4.setSelected(true);

        //defualt the pause on difference value
        jCheckBox2.setSelected(true);
        myCO.setPauseOnDiff(jCheckBox2.isSelected());

        //set the default UseNN setting
        myCO.setUseNN(jCheckBox1.isSelected());
        jComboBox1.setEnabled(jCheckBox1.isSelected());

        buttonGroup2.add(jRadioButton3);
        buttonGroup2.add(jRadioButton4);
        buttonGroup2.add(jRadioButton5);

        //seweights: reflect this default
        myCO.setUseNN(jCheckBox4.isSelected());

        addAllThingsToThingsIveAdded();


    }

    public static WeightSelector GetInstance() {
        return visibleWeightSelector;
    }

    public void SetAsVisibleWeightSelector() {
        visibleWeightSelector = this;
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        buttonGroup2 = new javax.swing.ButtonGroup();
        jScrollPane1 = new javax.swing.JScrollPane();
        jList1 = new javax.swing.JList();
        txtWeights = new javax.swing.JTextField();
        jButton1 = new javax.swing.JButton();
        jTextField1 = new javax.swing.JTextField();
        jTextField2 = new javax.swing.JTextField();
        jTextField3 = new javax.swing.JTextField();
        jTextField4 = new javax.swing.JTextField();
        jTextField5 = new javax.swing.JTextField();
        jTextField6 = new javax.swing.JTextField();
        jTextField7 = new javax.swing.JTextField();
        jTextField8 = new javax.swing.JTextField();
        jRadioButton3 = new javax.swing.JRadioButton();
        jRadioButton4 = new javax.swing.JRadioButton();
        jRadioButton5 = new javax.swing.JRadioButton();
        jTextField9 = new javax.swing.JTextField();
        jCheckBox1 = new javax.swing.JCheckBox();
        jCheckBox2 = new javax.swing.JCheckBox();
        jCheckBox3 = new javax.swing.JCheckBox();
        jComboBox1 = new javax.swing.JComboBox();
        jCheckBox4 = new javax.swing.JCheckBox();
        jCheckBox5 = new javax.swing.JCheckBox();
        chbPlayRegular = new javax.swing.JCheckBox();
        lblWeights = new javax.swing.JLabel();
        btnBegin = new javax.swing.JButton();
        btnShowTopWeights = new javax.swing.JButton();
        txtNumTopChoices = new javax.swing.JTextField();
        chkbHistory = new javax.swing.JCheckBox();
        txtHistory = new javax.swing.JTextField();
        btnAskingConditions = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.DO_NOTHING_ON_CLOSE);
        addWindowListener(new java.awt.event.WindowAdapter() {
            public void windowClosing(java.awt.event.WindowEvent evt) {
                formWindowClosing(evt);
            }
            public void windowClosed(java.awt.event.WindowEvent evt) {
                formWindowClosed(evt);
            }
        });

        jList1.setModel(new javax.swing.AbstractListModel() {
            String[] strings = { "Item 1", "Item 2", "Item 3", "Item 4", "Item 5" };
            public int getSize() { return strings.length; }
            public Object getElementAt(int i) { return strings[i]; }
        });
        jList1.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jList1MouseClicked(evt);
            }
        });
        jScrollPane1.setViewportView(jList1);

        txtWeights.setText("-3, -8, 43, 4, 14, 31,47, 45");
        txtWeights.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtWeightsActionPerformed(evt);
            }
        });

        jButton1.setText("Change Weights");
        jButton1.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jButton1MouseClicked(evt);
            }
        });
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        jTextField1.setToolTipText("w1: Total number of blanks under piece");
        jTextField1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jTextField1ActionPerformed(evt);
            }
        });

        jTextField2.setToolTipText("w2: Blank spaces IMMEDIATELY under piece");

        jTextField3.setToolTipText("w3: Line cleared");

        jTextField4.setToolTipText("w4: the width/height");

        jTextField5.setToolTipText("w5: Height");
        jTextField5.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jTextField5ActionPerformed(evt);
            }
        });

        jTextField6.setToolTipText("w6: touching another piece (not wall) to the left or to the right");

        jTextField7.setToolTipText("w7: Touching the edge");

        jTextField8.setToolTipText("w8: Piece immediatly under me");

        jRadioButton3.setText("Speed: FAST");
        jRadioButton3.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jRadioButton3MouseClicked(evt);
            }
        });
        jRadioButton3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jRadioButton3ActionPerformed(evt);
            }
        });

        jRadioButton4.setText("Speed: Level Apropriate");
        jRadioButton4.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jRadioButton4MouseClicked(evt);
            }
        });

        jRadioButton5.setText("Speed: Set Custom Level");
        jRadioButton5.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jRadioButton5MouseClicked(evt);
            }
        });

        jTextField9.setText("1");

        jCheckBox1.setText("Use NN");
        jCheckBox1.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jCheckBox1MouseClicked(evt);
            }
        });
        jCheckBox1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jCheckBox1ActionPerformed(evt);
            }
        });

        jCheckBox2.setSelected(true);
        jCheckBox2.setText("Pause On Difference");
        jCheckBox2.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jCheckBox2MouseClicked(evt);
            }
        });
        jCheckBox2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jCheckBox2ActionPerformed(evt);
            }
        });

        jCheckBox3.setSelected(true);
        jCheckBox3.setText("Auto Drop");
        jCheckBox3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jCheckBox3ActionPerformed(evt);
            }
        });

        jComboBox1.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jComboBox1MouseClicked(evt);
            }
        });
        jComboBox1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jComboBox1ActionPerformed(evt);
            }
        });

        jCheckBox4.setSelected(true);
        jCheckBox4.setText("Use Weights (WARNING: Unchecking this could be catestrophic!)");
        jCheckBox4.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jCheckBox4ActionPerformed(evt);
            }
        });

        jCheckBox5.setText("Always On Top");
        jCheckBox5.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jCheckBox5ActionPerformed(evt);
            }
        });

        chbPlayRegular.setText("Play Regular Tetris");
        chbPlayRegular.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                chbPlayRegularActionPerformed(evt);
            }
        });

        lblWeights.setText("Current Weights: ");

        btnBegin.setText("Start Tetris");
        btnBegin.setToolTipText("");
        btnBegin.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnBeginActionPerformed(evt);
            }
        });

        btnShowTopWeights.setText("Show Top Weights");
        btnShowTopWeights.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnShowTopWeightsActionPerformed(evt);
            }
        });

        txtNumTopChoices.setText("5");

        chkbHistory.setText("Keep History");
        chkbHistory.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                chkbHistoryActionPerformed(evt);
            }
        });

        txtHistory.setText("200");

        btnAskingConditions.setText("NN Conditions");
        btnAskingConditions.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnAskingConditionsActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addContainerGap()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(jTextField1, javax.swing.GroupLayout.PREFERRED_SIZE, 50, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(jTextField2, javax.swing.GroupLayout.PREFERRED_SIZE, 50, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(jTextField3, javax.swing.GroupLayout.PREFERRED_SIZE, 50, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(jTextField4, javax.swing.GroupLayout.PREFERRED_SIZE, 50, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(jTextField5, javax.swing.GroupLayout.PREFERRED_SIZE, 50, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addComponent(jButton1)
                            .addGroup(layout.createSequentialGroup()
                                .addGap(10, 10, 10)
                                .addComponent(lblWeights)))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(jTextField6, javax.swing.GroupLayout.PREFERRED_SIZE, 50, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(jTextField7, javax.swing.GroupLayout.PREFERRED_SIZE, 50, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(jTextField8, javax.swing.GroupLayout.PREFERRED_SIZE, 50, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(btnShowTopWeights)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(txtNumTopChoices, javax.swing.GroupLayout.PREFERRED_SIZE, 21, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(btnBegin)))
                        .addGap(0, 0, Short.MAX_VALUE))
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jRadioButton3)
                            .addComponent(jRadioButton4)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(jRadioButton5)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(jTextField9, javax.swing.GroupLayout.PREFERRED_SIZE, 26, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(layout.createSequentialGroup()
                                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                            .addComponent(jCheckBox3)
                                            .addGroup(layout.createSequentialGroup()
                                                .addComponent(chkbHistory)
                                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                                .addComponent(txtHistory, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                                        .addGap(47, 47, 47))
                                    .addGroup(layout.createSequentialGroup()
                                        .addComponent(chbPlayRegular)
                                        .addGap(45, 45, 45)))
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(btnAskingConditions)
                                    .addComponent(jCheckBox1)
                                    .addComponent(jCheckBox2)
                                    .addComponent(jComboBox1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jCheckBox4)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 292, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(jCheckBox5))
                            .addComponent(txtWeights, javax.swing.GroupLayout.PREFERRED_SIZE, 292, javax.swing.GroupLayout.PREFERRED_SIZE))))
                .addContainerGap(10, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(jCheckBox4)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addGap(9, 9, 9)
                                .addComponent(jCheckBox5))
                            .addGroup(layout.createSequentialGroup()
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 248, javax.swing.GroupLayout.PREFERRED_SIZE))))
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(chbPlayRegular)
                                .addGap(7, 7, 7))
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                                .addComponent(btnAskingConditions)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)))
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jCheckBox1)
                            .addComponent(jCheckBox3))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jCheckBox2)
                            .addComponent(chkbHistory)
                            .addComponent(txtHistory, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jComboBox1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(16, 16, 16)
                        .addComponent(jRadioButton3)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jRadioButton4)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jRadioButton5)
                            .addComponent(jTextField9, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(txtWeights, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jTextField1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jTextField2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jTextField3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jTextField4, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jTextField5, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jTextField6, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jTextField7, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jTextField8, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(4, 4, 4)
                .addComponent(jButton1)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lblWeights)
                    .addComponent(btnShowTopWeights)
                    .addComponent(txtNumTopChoices, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btnBegin))
                .addContainerGap(57, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void txtWeightsActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtWeightsActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtWeightsActionPerformed

    private void jList1MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jList1MouseClicked
        System.out.println("mouse clicked!");
        String selected = jList1.getSelectedValue().toString();
        fillWeightsBoxes(selected);


    }//GEN-LAST:event_jList1MouseClicked

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jButton1ActionPerformed

    private void jButton1MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jButton1MouseClicked

        myCO.weights = GetWeightsFromTextBoxes();
        String str = "";
        for (int i = 0; i < myCO.getWeights().length; i++) {
            str += myCO.getWeights()[i] + ((i == myCO.getWeights().length - 1) ? "" : ", ");

        }
        lblWeights.setText("Current Weights: " + str);
        // mychoiceString[0]=InputWeights.getText();
//        setVisible(false); //you can't see me!
//        dispose();


    }//GEN-LAST:event_jButton1MouseClicked

    private void jTextField1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jTextField1ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jTextField1ActionPerformed

    private void jTextField5ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jTextField5ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jTextField5ActionPerformed

    private void formWindowClosed(java.awt.event.WindowEvent evt) {//GEN-FIRST:event_formWindowClosed
        // TODO add your handling code here:
    }//GEN-LAST:event_formWindowClosed

    private void jRadioButton3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jRadioButton3ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jRadioButton3ActionPerformed

    private void jRadioButton3MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jRadioButton3MouseClicked
        myCO.setSpeedFast();
    }//GEN-LAST:event_jRadioButton3MouseClicked

    private void jRadioButton4MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jRadioButton4MouseClicked
        myCO.setLevelAppropriate();
    }//GEN-LAST:event_jRadioButton4MouseClicked

    private void jRadioButton5MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jRadioButton5MouseClicked
        myCO.setCustomSpeedLevel(Integer.parseInt(jTextField9.getText().trim()));
    }//GEN-LAST:event_jRadioButton5MouseClicked

    private void jCheckBox1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jCheckBox1ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jCheckBox1ActionPerformed

    private void jCheckBox1MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jCheckBox1MouseClicked
        myCO.setUseNN(jCheckBox1.isSelected());
        jComboBox1.setEnabled(jCheckBox1.isSelected());

    }//GEN-LAST:event_jCheckBox1MouseClicked

    private void jCheckBox2MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jCheckBox2MouseClicked
    }//GEN-LAST:event_jCheckBox2MouseClicked

    private void jCheckBox2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jCheckBox2ActionPerformed
        myCO.setPauseOnDiff(jCheckBox2.isSelected());
    }//GEN-LAST:event_jCheckBox2ActionPerformed

    private void jCheckBox3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jCheckBox3ActionPerformed
        myCO.SetAutoDrop(jCheckBox3.isSelected());
    }//GEN-LAST:event_jCheckBox3ActionPerformed

    private void jComboBox1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jComboBox1ActionPerformed
        try {
            System.out.println("comboboxclicked");
            myCO.setNN((NNCodes) jComboBox1.getSelectedItem());
        } catch (Exception e) {
            System.out.println(e);
            //JOptionPane.showMessageDialog(this, e, "Error", JOptionPane.WARNING_MESSAGE);
        }
    }//GEN-LAST:event_jComboBox1ActionPerformed

    private void jCheckBox5ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jCheckBox5ActionPerformed
        setAlwaysOnTop(jCheckBox5.isSelected());
    }//GEN-LAST:event_jCheckBox5ActionPerformed

    private void chbPlayRegularActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_chbPlayRegularActionPerformed

        boolean bool = !chbPlayRegular.isSelected();
        System.out.println(bool);

        for (Component component : thingsIveAdded) {
            component.setEnabled(bool);
        }



    }//GEN-LAST:event_chbPlayRegularActionPerformed

    private void formWindowClosing(java.awt.event.WindowEvent evt) {//GEN-FIRST:event_formWindowClosing
        int o = JOptionPane.showConfirmDialog(rootPane, "Are you sure you want to quit?");
        System.out.println(o);
        if (o == 0) {
            this.dispose();
        }
    }//GEN-LAST:event_formWindowClosing

    private void jComboBox1MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jComboBox1MouseClicked
    }//GEN-LAST:event_jComboBox1MouseClicked

    private void jCheckBox4ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jCheckBox4ActionPerformed
        myCO.setUseWeights(jCheckBox4.isSelected());

    }//GEN-LAST:event_jCheckBox4ActionPerformed

    private void btnBeginActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnBeginActionPerformed
        Frame frame = new Frame("Tetris");
        myCO.setMyConfiger(this);
        if (null == myCO.getMyGame()) {

            myCO.setMyGame(new AbstractGame(this, myCO));

        }
        // Set up frame
        frame.add(myCO.getMyGame().getComponent());
        frame.pack();

        // Add frame window listener
        frame.addWindowListener(new WindowAdapter() {
            public void windowClosing(WindowEvent e) {
                System.exit(0);
            }
        });

        // Show frame (and start game)

        frame.setVisible(true);
    }//GEN-LAST:event_btnBeginActionPerformed

    private void btnShowTopWeightsActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnShowTopWeightsActionPerformed
        //TopChoiceViewer topChoiceViewer = new TopChoiceViewer();

        int s = 5;
        try {
            s = Integer.parseInt(txtNumTopChoices.getText());
        } catch (Exception e) {
            JOptionPane.showMessageDialog(rootPane, "Error: NumTopChoices value is non-numeric");
            return;
        }


        if (null == myTopChoiceViewer) {
            
            myCO.setTopChoicesNumber(s);
            myTopChoiceViewer = new JFrame("Top Choice Viewer");

            allboards = new SquareBoard[s];
            for (int i = 0; i < allboards.length; i++) {
                allboards[i] = new SquareBoard(10, 20);

            }


            Container content = myTopChoiceViewer.getContentPane();
            GridLayout gl = new GridLayout(2, s);
            System.out.println(gl.getColumns());
            System.out.println(gl.getRows());
            content.setLayout(gl);
            for (int i = 0; i < allboards.length; i++) {
                //     content.add(allboards[i].getComponent());
                content.add(allboards[i].getComponent());
            }
            lblRatings = new JLabel[allboards.length];
            for (int i = 0; i < allboards.length; i++) {
                lblRatings[i] = new JLabel("text:" + i);
                lblRatings[i].setHorizontalAlignment(SwingConstants.CENTER);
                lblRatings[i].setVerticalAlignment(SwingConstants.TOP);
                lblRatings[i].setVerticalTextPosition(SwingConstants.TOP);
                content.add(lblRatings[i]);
            }


        }



        myTopChoiceViewer.setSize(500, 500);
        myTopChoiceViewer.setVisible(true);
    }//GEN-LAST:event_btnShowTopWeightsActionPerformed

    private void chkbHistoryActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_chkbHistoryActionPerformed

        int howmanytoKeep = 200;
        try {
            howmanytoKeep = Integer.parseInt(txtHistory.getText());

        } catch (Exception e) {
            txtHistory.setText("" + howmanytoKeep);
        }
        myCO.setKeepHistory(chkbHistory.isSelected(), howmanytoKeep);
    }//GEN-LAST:event_chkbHistoryActionPerformed

    private void btnAskingConditionsActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnAskingConditionsActionPerformed
        if (mySpecialNNConditions == null) {
            mySpecialNNConditions = new SpecificAskNNConditions(myCO);
            mySpecialNNConditions.setLocationRelativeTo(this);
        }
        mySpecialNNConditions.setVisible(true);
    }//GEN-LAST:event_btnAskingConditionsActionPerformed
    /**
     * @param args the command line arguments
     */
    static String[] mychoiceString;
    int[] ScoreAndweights;
    private ControllerObject myCO;
    private static WeightSelector visibleWeightSelector;

    public void man() {

        //mychoiceString=choiceString;
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(WeightSelector.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(WeightSelector.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(WeightSelector.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(WeightSelector.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */


    }
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnAskingConditions;
    private javax.swing.JButton btnBegin;
    private javax.swing.JButton btnShowTopWeights;
    private javax.swing.ButtonGroup buttonGroup2;
    private javax.swing.JCheckBox chbPlayRegular;
    private javax.swing.JCheckBox chkbHistory;
    private javax.swing.JButton jButton1;
    private javax.swing.JCheckBox jCheckBox1;
    private javax.swing.JCheckBox jCheckBox2;
    private javax.swing.JCheckBox jCheckBox3;
    private javax.swing.JCheckBox jCheckBox4;
    private javax.swing.JCheckBox jCheckBox5;
    private javax.swing.JComboBox jComboBox1;
    private javax.swing.JList jList1;
    private javax.swing.JRadioButton jRadioButton3;
    private javax.swing.JRadioButton jRadioButton4;
    private javax.swing.JRadioButton jRadioButton5;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTextField jTextField1;
    private javax.swing.JTextField jTextField2;
    private javax.swing.JTextField jTextField3;
    private javax.swing.JTextField jTextField4;
    private javax.swing.JTextField jTextField5;
    private javax.swing.JTextField jTextField6;
    private javax.swing.JTextField jTextField7;
    private javax.swing.JTextField jTextField8;
    private javax.swing.JTextField jTextField9;
    private javax.swing.JLabel lblWeights;
    private javax.swing.JTextField txtHistory;
    private javax.swing.JTextField txtNumTopChoices;
    private javax.swing.JTextField txtWeights;
    // End of variables declaration//GEN-END:variables

    private void fillWeightsBoxes(String selected) {
        TetrisReader tr = new TetrisReader();
        ScoreAndweights = tr.SplitScoreStringToIntArray(selected, ",");
        jTextField1.setText("" + ScoreAndweights[1]);
        jTextField2.setText("" + ScoreAndweights[2]);
        jTextField3.setText("" + ScoreAndweights[3]);
        jTextField4.setText("" + ScoreAndweights[4]);
        jTextField5.setText("" + ScoreAndweights[5]);
        jTextField6.setText("" + ScoreAndweights[6]);
        jTextField7.setText("" + ScoreAndweights[7]);
        jTextField8.setText("" + ScoreAndweights[8]);

    }

    private int[] GetWeightsFromTextBoxes() {
        int[] toReturn = new int[8];
        try {
            toReturn[0] = Integer.parseInt(jTextField1.getText().trim());
            toReturn[1] = Integer.parseInt(jTextField2.getText().trim());
            toReturn[2] = Integer.parseInt(jTextField3.getText().trim());
            toReturn[3] = Integer.parseInt(jTextField4.getText().trim());
            toReturn[4] = Integer.parseInt(jTextField5.getText().trim());
            toReturn[5] = Integer.parseInt(jTextField6.getText().trim());
            toReturn[6] = Integer.parseInt(jTextField7.getText().trim());
            toReturn[7] = Integer.parseInt(jTextField8.getText().trim());
            return toReturn;
        } catch (Exception x) {
            JOptionPane.showMessageDialog(this, "Who buddy! Select something first!");
            return myCO.weights;
        }
    }

    private void SetUseNNCheckBox() {
        if (null == myCO.getMyGame()) {
            return;
        }

//        jCheckBox1.setSelected((myCO.myGame.getClass() == WeightsWithNNTetris.class
//                || myCO.myGame.getClass() == ViewTopChoices.class));
    }

    private void PopulateNNList() {
        for (NNCodes nncode : NNCodes.values()) {
            jComboBox1.addItem(nncode);
        }
        jComboBox1.setSelectedIndex(1);

    }

    public void PopulateWeightList() {
        String[] myarray = new String[]{
            "11065641, -6, -12, 51, -3, 10, 37, 50, 42",
            "9142091, -6, -9, 46, 1, 11, 35, 54, 50",
            "9083268, -2, -11, 48, 0, 14, 32, 50, 45",
            "7735195, -5, -6, 47, -4, 13, 32, 48, 46",
            "7453891, -5, -14, 45, 4, 10, 31, 55, 41",
            "7207240, -4, -15, 51, -3, 11, 35, 50, 46",
            "6830564, -6, -15, 48, -4, 12, 31, 47, 42",
            "6357973, -3, -9, 45, 3, 10, 30, 47, 45",
            "5854339, -3, -11, 48, -2, 10, 34, 50, 43",
            "5494136, -5, -10, 44, -3, 12, 37, 52, 46",
            "5307054, -2, -15, 45, 1, 10, 33, 47, 45",
            "5297383, -2, -11, 39, 4, 11, 31, 52, 41",
            "5291309, -4, -7, 48, 4, 10, 32, 45, 45",
            "5199118, -2, -14, 45, -1, 14, 33, 49, 44",
            "4825974, -4, -13, 51, -3, 10, 33, 46, 47",
            "4621648, -5, -7, 51, 0, 11, 35, 54, 45",
            "4620648, -1, -13, 48, -2, 16, 34, 49, 50",
            "4587570, -6, -13, 47, -3, 11, 32, 49, 48",
            "4391275, -3, -13, 48, -2, 12, 37, 53, 48",
            "4218350, -3, -8, 43, 4, 14, 31, 47, 45",
            "-1, -320, -778, 4403, 324, 1316, 3170, 4743, 4495"};
        jList1.setListData(myarray);
    }

    private void addAllThingsToThingsIveAdded() {
        thingsIveAdded.add(jButton1);
        thingsIveAdded.add(btnBegin);
        thingsIveAdded.add(jCheckBox1);
        thingsIveAdded.add(jCheckBox2);
        thingsIveAdded.add(jCheckBox3);
        thingsIveAdded.add(jCheckBox4);
        thingsIveAdded.add(jCheckBox5);
        thingsIveAdded.add(jList1);
        thingsIveAdded.add(jRadioButton3);
        thingsIveAdded.add(jRadioButton4);
        thingsIveAdded.add(jRadioButton5);
        thingsIveAdded.add(jScrollPane1);
        thingsIveAdded.add(jTextField1);
        thingsIveAdded.add(jTextField2);
        thingsIveAdded.add(jTextField3);
        thingsIveAdded.add(jTextField4);
        thingsIveAdded.add(jTextField5);
        thingsIveAdded.add(jTextField6);
        thingsIveAdded.add(jTextField7);
        thingsIveAdded.add(jTextField8);
        thingsIveAdded.add(jTextField9);
        thingsIveAdded.add(jComboBox1);
        thingsIveAdded.add(txtWeights);
    }

    public void setTopChoicesContent(PlacementDecider currpd) {
        BoardConverter bc = new BoardConverter();

        for (int i = 0; i < allboards.length; i++) {
            bc.MakeMyPartsHisParts(allboards[i], bc.ConvertToBoard_2_isa_RED(currpd.getTopChoices().get(i).getMyboardAfterPlacementBeforeLinesClearedBeforeAllOnes()));
            allboards[i].PerhapsRedrawAll();
            lblRatings[i].setText(((currpd.getNNRatings() == null) ? "null" : "" + currpd.getNNRatings()[i]));
        }
        int indexOf = -1;
        double highest = -1;
        if (currpd.getNNRatings() != null) {
            for (int i = 0; i < currpd.getNNRatings().length; i++) {
                if (currpd.getNNRatings()[i] > highest) {
                    indexOf = i;
                    highest = currpd.getNNRatings()[i];
                }

            }
            for (int i = 0; i < lblRatings.length; i++) {
                if (i == indexOf) {
                    lblRatings[i].setForeground(Color.yellow);
                    
                } else {
                    lblRatings[i].setForeground(Color.GRAY);
                }
                lblRatings[i].repaint();
            }

        }

    }
}
