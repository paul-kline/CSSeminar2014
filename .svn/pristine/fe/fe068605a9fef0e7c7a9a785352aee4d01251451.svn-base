/*
 * To change this template, choose Tools | Templates
 * and open the template in the editor.
 */
package GUIs;

import tetrispaul4.SpecificAskNNConditions;
import GUIs.SeedSettingGUI;
import TetrisHelpful.BoardConverter;
import bytefigtestering.AIPlayer;
import bytefigtestering.GAControllerObject;
import java.awt.event.KeyEvent;
import java.util.Enumeration;
import java.util.LinkedList;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.AbstractButton;
import javax.swing.ButtonGroup;
import javax.swing.JButton;
import javax.swing.JCheckBox;
import javax.swing.JOptionPane;
import javax.swing.JTextField;
import tetrispaul4.ControllerObject;

/**
 *
 * @author paul.kline
 */
public class GATrainingSettings extends javax.swing.JFrame {

    private GAControllerObject myGACO;
    private SeedSettingGUI mySeedSelector;
    private SpecificAskNNConditions mySANC;
    LinkedList<JCheckBox> weightButtons;
    private boolean successfulParsing = true;
    private boolean[] tempBools;

    /**
     * Creates new form GATrainingSettings
     */
    public GATrainingSettings() {
        man();
        initComponents();
        GroupWeightCheckBoxes();

    }

    public GATrainingSettings(GAControllerObject gaco) {
        this();
        myGACO = gaco;
        updateMutationsInMyGECO();

    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        buttonGroup1 = new javax.swing.ButtonGroup();
        jButton1 = new javax.swing.JButton();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        txtGenerations = new javax.swing.JTextField();
        txtPerSeed = new javax.swing.JTextField();
        btnBegin = new javax.swing.JButton();
        chkbMutateAll = new javax.swing.JCheckBox();
        chkbW1 = new javax.swing.JCheckBox();
        chkbW2 = new javax.swing.JCheckBox();
        chkbW3 = new javax.swing.JCheckBox();
        chkbW4 = new javax.swing.JCheckBox();
        chkbW5 = new javax.swing.JCheckBox();
        chkbW6 = new javax.swing.JCheckBox();
        chkbW7 = new javax.swing.JCheckBox();
        chkbW8 = new javax.swing.JCheckBox();
        btnSetSpecificAskNNConditions = new javax.swing.JButton();
        jLabel3 = new javax.swing.JLabel();
        txtPlayTop = new javax.swing.JTextField();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jButton1.setText("Select Seeds");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        jLabel1.setText("Generations");

        jLabel2.setText("# per seed");

        txtGenerations.setText("1");
        txtGenerations.setToolTipText("This is the number of generations");
        txtGenerations.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                txtGenerationsFocusGained(evt);
            }
        });
        txtGenerations.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                txtGenerationsKeyReleased(evt);
            }
        });

        txtPerSeed.setText("20");
        txtPerSeed.setToolTipText("Each member in a population is played this many times");
        txtPerSeed.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtPerSeedActionPerformed(evt);
            }
        });
        txtPerSeed.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                txtPerSeedFocusGained(evt);
            }
        });

        btnBegin.setText("Begin!");
        btnBegin.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnBeginActionPerformed(evt);
            }
        });

        chkbMutateAll.setText("MutateAll");
        chkbMutateAll.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                chkbMutateAllActionPerformed(evt);
            }
        });

        chkbW1.setText("W1 (Total Blanks Under)");
        chkbW1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                chkbW1ActionPerformed(evt);
            }
        });

        chkbW2.setText("W2 (Blanks Immediatley Under)");
        chkbW2.setActionCommand("");
        chkbW2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                chkbW2ActionPerformed(evt);
            }
        });

        chkbW3.setText("W3 (Lines Cleared)");
        chkbW3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                chkbW3ActionPerformed(evt);
            }
        });

        chkbW4.setText("W4 (width/height)");
        chkbW4.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                chkbW4ActionPerformed(evt);
            }
        });

        chkbW5.setText("W5 (Height)");
        chkbW5.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                chkbW5ActionPerformed(evt);
            }
        });

        chkbW6.setText("W6 (Touching Another Piece)");
        chkbW6.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                chkbW6ActionPerformed(evt);
            }
        });

        chkbW7.setText("W7 (Touching Edge)");
        chkbW7.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                chkbW7ActionPerformed(evt);
            }
        });

        chkbW8.setText("W8 (Piece or Floor Immediatly Under)");
        chkbW8.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                chkbW8ActionPerformed(evt);
            }
        });

        btnSetSpecificAskNNConditions.setText("Set Specific Ask NN Conditions");
        btnSetSpecificAskNNConditions.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnSetSpecificAskNNConditionsActionPerformed(evt);
            }
        });

        jLabel3.setText("Play top: ");

        txtPlayTop.setText("1");
        txtPlayTop.setToolTipText("How many of the top results (from each seed) should be kept for the next generation");
        txtPlayTop.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                txtPlayTopFocusGained(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(chkbW8)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(btnBegin))
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(chkbW7)
                    .addComponent(chkbW1)
                    .addComponent(chkbW2)
                    .addComponent(chkbW3)
                    .addComponent(chkbW4)
                    .addComponent(chkbW5)
                    .addComponent(chkbW6)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(jButton1, javax.swing.GroupLayout.Alignment.TRAILING)
                            .addGroup(layout.createSequentialGroup()
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jLabel2)
                                    .addComponent(jLabel3)
                                    .addComponent(jLabel1))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(txtGenerations)
                                    .addComponent(txtPerSeed)
                                    .addComponent(txtPlayTop))))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(btnSetSpecificAskNNConditions))
                    .addComponent(chkbMutateAll))
                .addGap(0, 172, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jButton1)
                    .addComponent(btnSetSpecificAskNNConditions))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel1)
                    .addComponent(txtGenerations, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel2)
                    .addComponent(txtPerSeed, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel3)
                    .addComponent(txtPlayTop, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(chkbMutateAll)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(chkbW1)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(chkbW2)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(chkbW3)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(chkbW4)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(chkbW5)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(chkbW6)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(chkbW7)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(chkbW8)
                    .addComponent(btnBegin)))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed

        if (null == mySeedSelector) {
            mySeedSelector = new SeedSettingGUI(myGACO);
        }
        mySeedSelector.setVisible(true);

    }//GEN-LAST:event_jButton1ActionPerformed

    private void btnSetSpecificAskNNConditionsActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnSetSpecificAskNNConditionsActionPerformed
        if (null == mySANC) {
            mySANC = new SpecificAskNNConditions(myGACO);

        }
        mySANC.setVisible(true);
    }//GEN-LAST:event_btnSetSpecificAskNNConditionsActionPerformed

    private void chkbMutateAllActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_chkbMutateAllActionPerformed
        boolean bool = chkbMutateAll.isSelected();
        
        if (bool) {
            SetTempBools();
            for (JCheckBox jCheckBox : weightButtons) {
                jCheckBox.setEnabled(!bool);
                jCheckBox.setSelected(bool);
            }
        }else{
            for (int i = 0; i < tempBools.length; i++) {
                weightButtons.get(i).setSelected(tempBools[i]);
                weightButtons.get(i).setEnabled(true);
            }
        }
        updateMutationsInMyGECO();
    }//GEN-LAST:event_chkbMutateAllActionPerformed

    private void btnBeginActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnBeginActionPerformed
        if (null == myGACO.getSeeds()) {
            JOptionPane.showMessageDialog(this, "Error: Please select at least one seed.");
            return;
        }
        if (null == mySANC) {
            mySANC = new SpecificAskNNConditions(myGACO); //new SpecificAskNNConditions(myGACO);
        }
//        System.out.println("you clicked begin!!!!");
        int gamesPerSeed = -1;
        int gens = -1;
        int playtop = -1;
        successfulParsing = true;
        gamesPerSeed = attemptAssignment(txtPerSeed);
        gens = attemptAssignment(txtGenerations);
        playtop = attemptAssignment(txtPlayTop);
        if (playtop > gamesPerSeed) {
            JOptionPane.showMessageDialog(this, "Error: Cannot playtop>gamesPerSeed");
            return;
        }
        if (!successfulParsing) {
            return;
        }
        myGACO.setGamesPerSeed(gamesPerSeed);
        myGACO.setGenerations(gens);
        myGACO.setChooseTopXfromEachSeed(playtop);

        AIPlayer aip = new AIPlayer((GAControllerObject) BoardConverter.deepCopy(myGACO));
//        System.out.println("do this");
        this.setVisible(false);
        GAControllerObject aipsGACO = aip.getMyGACO();
        aipsGACO.setProgressGUI(aipsGACO.getProgressGUI());
        aipsGACO.getProgressGUI().setVisible(true);

        aipsGACO.getProgressGUI().setTotal(aipsGACO.CalculateTotal());
        aipsGACO.setMyAIPlayer(aip);
        aipsGACO.getProgressGUI().getTxtaOutput().setText("");
        Thread t = new Thread(aipsGACO.getMyAIPlayer());
        aipsGACO.getProgressGUI().setT(t);
        t.start();
    }//GEN-LAST:event_btnBeginActionPerformed

    private void txtGenerationsKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtGenerationsKeyReleased

    }//GEN-LAST:event_txtGenerationsKeyReleased

    private void txtGenerationsFocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_txtGenerationsFocusGained
        txtGenerations.setSelectionStart(0);
        txtGenerations.setSelectionEnd(txtGenerations.getText().length());
    }//GEN-LAST:event_txtGenerationsFocusGained

    private void txtPerSeedActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtPerSeedActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtPerSeedActionPerformed

    private void txtPerSeedFocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_txtPerSeedFocusGained
        txtPerSeed.setSelectionStart(0);
        txtPerSeed.setSelectionEnd(txtPerSeed.getText().length());
    }//GEN-LAST:event_txtPerSeedFocusGained

    private void txtPlayTopFocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_txtPlayTopFocusGained
        txtPlayTop.setSelectionStart(0);
        txtPlayTop.setSelectionEnd(txtPlayTop.getText().length());
    }//GEN-LAST:event_txtPlayTopFocusGained

    private void chkbW1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_chkbW1ActionPerformed
        updateMutationsInMyGECO();
    }//GEN-LAST:event_chkbW1ActionPerformed

    private void chkbW2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_chkbW2ActionPerformed
        updateMutationsInMyGECO();
    }//GEN-LAST:event_chkbW2ActionPerformed

    private void chkbW3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_chkbW3ActionPerformed
        updateMutationsInMyGECO();
    }//GEN-LAST:event_chkbW3ActionPerformed

    private void chkbW4ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_chkbW4ActionPerformed
        updateMutationsInMyGECO();
    }//GEN-LAST:event_chkbW4ActionPerformed

    private void chkbW5ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_chkbW5ActionPerformed
        updateMutationsInMyGECO();
    }//GEN-LAST:event_chkbW5ActionPerformed

    private void chkbW6ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_chkbW6ActionPerformed
        updateMutationsInMyGECO();
    }//GEN-LAST:event_chkbW6ActionPerformed

    private void chkbW7ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_chkbW7ActionPerformed
        updateMutationsInMyGECO();
    }//GEN-LAST:event_chkbW7ActionPerformed

    private void chkbW8ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_chkbW8ActionPerformed
        updateMutationsInMyGECO();
    }//GEN-LAST:event_chkbW8ActionPerformed

    /**
     * @param args the command line arguments
     */
    public void man() {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            //            possible options
//            Metal
//            Nimbus
//            CDE/Motif
//            Windows
//            Windows Classic
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(GATrainingSettings.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(GATrainingSettings.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(GATrainingSettings.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(GATrainingSettings.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
    }
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnBegin;
    private javax.swing.JButton btnSetSpecificAskNNConditions;
    private javax.swing.ButtonGroup buttonGroup1;
    private javax.swing.JCheckBox chkbMutateAll;
    private javax.swing.JCheckBox chkbW1;
    private javax.swing.JCheckBox chkbW2;
    private javax.swing.JCheckBox chkbW3;
    private javax.swing.JCheckBox chkbW4;
    private javax.swing.JCheckBox chkbW5;
    private javax.swing.JCheckBox chkbW6;
    private javax.swing.JCheckBox chkbW7;
    private javax.swing.JCheckBox chkbW8;
    private javax.swing.JButton jButton1;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JTextField txtGenerations;
    private javax.swing.JTextField txtPerSeed;
    private javax.swing.JTextField txtPlayTop;
    // End of variables declaration//GEN-END:variables

    private void GroupWeightCheckBoxes() {
        System.out.println("group weight check boxes was executed in gatrainingsettings");
        weightButtons = new LinkedList<>();
        weightButtons.add(chkbW1);
        weightButtons.add(chkbW2);
        weightButtons.add(chkbW3);
        weightButtons.add(chkbW4);
        weightButtons.add(chkbW5);
        weightButtons.add(chkbW6);
        weightButtons.add(chkbW7);
        weightButtons.add(chkbW8);

    }

    private void updateMutationsInMyGECO() {
        if (myGACO.getShouldMutateWeightsArray() == null) {
            myGACO.setShouldMutateWeightsArray(new boolean[weightButtons.size()]);
        }
        for (int i = 0; i < weightButtons.size(); i++) {
            myGACO.getShouldMutateWeightsArray()[i] = (chkbMutateAll.isSelected()) ? true : weightButtons.get(i).isSelected();

        }
    }

    private int attemptAssignment(JTextField j) {
        try {
            return Integer.parseInt(j.getText());
        } catch (Exception e) {
            successfulParsing = false;
            JOptionPane.showMessageDialog(this, e + "\n Failure to assign.");
            return -1;
        }

    }

    public GAControllerObject getMyGACO() {
        return myGACO;
    }

    public void setMyGACO(GAControllerObject myGACO) {
        this.myGACO = myGACO;
    }

    public SeedSettingGUI getMySeedSelector() {
        return mySeedSelector;
    }

    public void setMySeedSelector(SeedSettingGUI mySeedSelector) {
        this.mySeedSelector = mySeedSelector;
    }

    public SpecificAskNNConditions getMySANC() {
        return mySANC;
    }

    public void setMySANC(SpecificAskNNConditions mySANC) {
        this.mySANC = mySANC;
    }

    public boolean isSuccessfulParsing() {
        return successfulParsing;
    }

    public void setSuccessfulParsing(boolean successfulParsing) {
        this.successfulParsing = successfulParsing;
    }

    private void SetTempBools() {
        if (null == tempBools) {
            tempBools = new boolean[myGACO.getShouldMutateWeightsArray().length];
        }
        for (int i = 0; i < tempBools.length; i++) {
            tempBools[i] = myGACO.getShouldMutateWeightsArray()[i];
        }
    }
}
