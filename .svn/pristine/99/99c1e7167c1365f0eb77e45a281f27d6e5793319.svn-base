package tetris3;

import org.encog.ml.MLEncodable;
import org.encog.ml.MLMethod;
import org.encog.ml.factory.MLMethodFactory;
import org.encog.persist.EncogDirectoryPersistence;

// Code generated by Encog v3.2.0
// Generation Date: Sun Feb 09 12:25:32 CST 2014
// Generated code may be used freely
// http://www.heatonresearch.com/encog

public class NNValues28Iterations {
    public static final double[] WEIGHTS = {
        -1.2547655815,-0.1145209146,0.1190356181,-0.0597687667,0.8004424669,25.2443130608,7.3455072383,-0.0657618869,-0.0661567402,-0.158058709,
        0.0649925411,-0.1423640031,-0.0362425933,0.3358995459,0.5068657857,0.4953731187,0.6328493722,0.5764360461,0.1379988479,0.1041168221,
        0.4932921618,-0.5113716432,0.8596335003,0.5594260922,0.505719698,0.2863047409,0.538430305,0.7811619106,0.2727651405,0.5683576773,
        0.8651872024
    };

    public static MLMethod createNetwork() {
        MLMethodFactory methodFactory = new MLMethodFactory();
        MLMethod result = methodFactory.create("feedforward","8:B->TANH->3:B->TANH->1", 8, 1);
        ((MLEncodable)result).decodeFromArray(WEIGHTS);
        return result;
    }

}
