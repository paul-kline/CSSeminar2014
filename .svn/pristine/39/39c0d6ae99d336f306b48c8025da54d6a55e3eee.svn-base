package tetris3;

import org.encog.ml.MLEncodable;
import org.encog.ml.MLMethod;
import org.encog.ml.factory.MLMethodFactory;
import org.encog.persist.EncogDirectoryPersistence;

// Code generated by Encog v3.2.0
// Generation Date: Sat Feb 08 18:02:52 CST 2014
// Generated code may be used freely
// http://www.heatonresearch.com/encog

public class NNValues2 {
    public static final double[] WEIGHTS = {
        -1.3241064811,-0.2069551146,-0.1375417467,0.0617153268,0.5884069633,23.7479097106,4.7396644258,0.0273507808,-0.0542811494,0.0875038199,
        0.4687918909,-0.343527204,-0.4961698983,0.6023842933,0.4697923195,0.1143755816,0.4658757225,0.5386685384,0.8553808337,0.8609857083,
        0.7894317927,-0.0348541312,0.5892674094,0.1467456448,0.5552683454,0.3676701825,0.6208536234,0.6607561776,0.5412527292,0.3442075786,
        0.4223583873
    };

    public static MLMethod createNetwork() {
        MLMethodFactory methodFactory = new MLMethodFactory();
        MLMethod result = methodFactory.create("feedforward","8:B->TANH->3:B->TANH->1", 8, 1);
        ((MLEncodable)result).decodeFromArray(WEIGHTS);
        return result;
    }

   
}
