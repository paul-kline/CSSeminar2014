/*
 * To change this template, choose Tools | Templates
 * and open the template in the editor.
 */
package NeuralThings;

import java.awt.Point;
import org.encog.ml.MLEncodable;
import org.encog.ml.MLMethod;
import org.encog.ml.factory.MLMethodFactory;
import org.encog.persist.EncogDirectoryPersistence;

// Code generated by Encog v3.2.0
// Generation Date: Fri Mar 21 23:01:52 CDT 2014
// Generated code may be used freely
// http://www.heatonresearch.com/encog
public class MomHighValsPaulMomLittleNo3_4_or8 extends PaulNetwork {

    public static final double[] WEIGHTS = {
        1.5615147203, 0.9057769593, 0.9988069702, -1.7676670156, 0.5703934767, 0.5265814432, 1.0741547885, 0.332968265, -1.3336160035, -1.2554027725,
        1.28206132, 0.2550031704, 0.6304324694, 0.8745722392, 1.2345254333, 0.2243766342, -1.0160496654, 0.8538613399, -1.1703877566, 0.9258130272,
        -1.1634569044, 0.5302372242, 0.4968430216, -1.0044443504, 0.6374415369, 0.1596173417, 0.5898328592, 0.8088967771, -0.9758560284, 0.4350519297,
        1.0807712302, 0.1857561982, 0.5986629751, 1.1331560186, -6.6406716554, 1.0250417834, -0.9455130488, 1.1501964345, 0.7077204187, 0.7484665283,
        -0.1051822433, -0.4872131887, 0.4710911824, 0.8797690933, 0.41742782, 0.3274326273, -0.5585524426, 1.8431617601, 0.2971999909, 0.7525795067,
        0.8442569649, 1.4457293248, 0.3262594656, 0.4178279059, 0.7741210055, 0.6698048154, 0.529950485, 1.6203497797, 0.8208626184, -0.2495597515,
        0.5348830897, 0.3996230445, -0.9339041336, 0.5324455709, -2.0682801244, 0.66752891, -1.0751282019, 0.6314998199, 1.4423184274, 0.1309227477,
        -38.8594023526, -13.5776630699, -7.1001007274, 3.0022469161, 27.177289771, 0.8533554557, -2.7422253224, -4.3830526809, -6.326802346, 3.0622341033,
        3.794249743, 0.9352612033, 4.7280844025, -1.5622706498, -11.32583694, 3.0946489375, 3.5434053944, -4.7091808363, -8.2905374395, 10.6001427123,
        11.1248186419, 3.929945735, 12.3562932996, -3.3097911438, 223.925661328, -12.9447719587, -143.7526801277, 30.6957624111, 16.0436159328, -85.9645814618,
        4.6126791501, -2.9153793855, -2.4470545498, 6.6567765997, -9.0606839687, 11.5328400124, -28.9871803647, -48.6974019154, 12.8235534489, 25.9185224344,
        13.7246974121, -1.6043248563, 1.1143246019, 0.3288587538, 3.0506095707, -0.8420271025, 3.3393858341, 1.2964217399, 2.6053965172, -0.6799611747,
        5.5135126678, 0.4966155474, 2.8055073381, -0.060573331, 18.3605551607, -18.9085740194, -1.8497849882, -10.4208598402, -0.0835261467, 0.8228929611,
        -1.1316776224, -0.2323167425, 1.2297237637, -0.8065014109, 1.5003290108, 0.5824095279, 85.3983726628, -7.9457201891, 11.8544661808, 51.9882242008,
        -49.434902347, -3.0626878233, 138.143313679, 6.6181133503, -12.9302673263, -35.3397042677, 18.3129695094, 17.4521415658, 51.5395812578, 0.1712046553,
        -42.5853469861, 41.7114060078, 44.4491463303, -5.6292023129, 9.238499784, -1.2138733072, 12.9830167597, 4.2344291944, -0.8511836231, -3.1539717169,
        3.7105301021, 1.7455621203, -5.341213789, -0.9428044736, -0.1623121736, 1.6440388406, 5.3062589518, -1.9501454878, 41.4064690502, 11.1698463462,
        26.4728347441, -8.3006495861, 13.0925410492, -0.9503711896, 8.7846300009, 2.214109718, 16.1133335444, 7.0569468265, -6.0538089573, 10.823888451,
        14.5056370134, 2.3048475368, 32.1355930274, -4.9851225195, 1.0486589578, 0.6125136956, 2.1583582677, 1.3641509741, 0.0019819899, 0.3748456827,
        -0.5327390523, 0.7919971283, 0.4147507108, 0.5985153413, 0.117521032, -0.3430165638, 73.4262745275, 30.9808790032, 33.7695500633, -6.8560200099,
        45.9594855749, -23.9892931967, 0.0508059799, 0.0454506208, -0.4625627524, 1.0571116308, 1.4177806464, 1.7677972484, -26.9298581847, -50.546995709,
        10.4241483344, 25.8459412915, 9.7313942233, -3.8499367207, 40.5174244621, -7.061900922, 20.2635232029, 13.2978523069, -17.3759718142, -5.1759562327,
        -0.6238955286, 15.795407351, 21.2119104951, 20.4250551947, -3.8830724138, -2.7503399678, 31.9747327892, -89.3664834303, 21.818647167, -2.8408963976,
        8.1428230524, 9.4057390112, -1.238943653, -1.1081909321, -12.6780652738, 5.7335742422, 4.521623524, 0.0101337566, -0.464045105, 0.4370303721,
        1.4279526475, 0.7641710858, 0.0497135233, -1.217890485, -0.2594838623, -0.0384028232, 2.4427796096, -1.2259775362, 1.4629971842, -0.446725011,
        28.531090606, 6.0653494653, 45.4062521901, 29.5397742239, 30.4688113891, 5.9750545692, 7.4264611123, 3.8103789316, 10.4174337416, 0.4982861972,
        -0.5323669983, 1.2964570859, 5.8059457333, -1.3208276793, 11.835334696, -0.377801036, 8.5861006016, 1.3204763067, 1.1360305832, 1.0042174305,
        1.2867465229, 0.6189633891, 0.6776938353, 0.8912195898, 3.1854345898, 0.2138293752, 0.5948899338, -1.1089613982, -1.7201796497, -0.5573414371,
        0.5464904263, 1.2052288585, 3.0184456321, 0.3264041658, 0.6928492646, 1.331326453, 2.4920075435, 0.2075830443, -0.766870377, 0.7772611638,
        -1.2237539252, 1.4575068655, -26.6239249872, 23.2614097856, -43.5377880291, 111.7433029468, 1.8990110503, -16.835320166, 8.253770001, -8.187564967,
        -0.5604613136, 5.0780517691, 9.1560084458, 1.2770889991, 45.068923786, -145.0534266005, 116.4542512532, -337.1299546823, -22.0052417189, 25.7913216636,
        -0.1415218352, 4.9400395294, 10.4864226275, 0.3082794247, 13.5860010415, -10.4636620824, 38.1398791307, -60.8832201827, 63.4245987218, -87.168539657,
        -10.6639449285, 12.9556564396, -0.6031594891, 1.1504999707, 1.5878031532, 1.0944453827, -0.6897634658, -0.8598759875, -3.7337931434, -2.7192189362,
        -18.1644359378, 18.2688006445, 31.9388316994, 10.1711561526, 111.6448763318, -6.3973734083, -79.2766174045, 64.316326346, 10.9926582013, 1.7702373098,
        15.3579228578, -0.4402350003, 0.9443175275, -13.600979618, 1.3531434786, 0.875376171, 3.6383363307, -0.6418570131, -0.359614055, -0.5911238388,
        0.1924614864, 1.639556628, -0.7838631382, 0.7746647286, 1.1128861644, 0.9291138852, 0.3568465462, -0.6709893793, 2.9067978588, -4.0405969059,
        12.4929707301, -0.2236302337, 0.6606179, -5.3315909656, -3.1834059482, -0.3176112442, 3.5178576774, 3.8851941942, 6.9034658905, 2.4509582432,
        -1.9056358049, 1.4264213337, 1.4871842632, 0.1784387558, -0.1281224129, -1.0204182727, -0.0599311248, 0.8453505188, 0.9446517279, 0.7937965355,
        0.4157995067, 0.1369355244, 11.301211764, 0.0088205323, 11.9942130112, 3.4395120258, -1.7558732727, -1.616963105, 78.1534460436, 5.0220434389,
        60.5348667303, -0.3088948083, 70.552887661, -9.1497109448, 2.5681463022, -1.4563864521, -12.2747695732, 1.6765244499, 1.7103225874, -2.0419390575,
        10.2503846842, 10.2454922506, 4.0552209932, 1.4713590827, 13.5095624668, 1.4611434214, -1.7906928465, 0.5957816163, 0.2620187182, -0.1168093708,
        0.1034478473, -1.5664331693, -0.7042253711, 0.5499835716, -5.9376974878, 3.9469312105, 0.442684407, 0.4671637171, 39.1415511528, -19.4767631082,
        -352.2830078486, -20.0211915143, -28.1624454383, 5.5284903981, 50.3456938473, -14.7807172301, 8.0690809758, 3.9237168728, -5.7620824526, -1.8869997665,
        66.5537616628, -1.6949844829, 3.5705808041, -47.6906909506, 6.6475255445, -78.8597688244, -1.9190030977, 3.1997114377, -2.7812886277, 5.3380367479,
        3.5645905192, 2.8978058033
    };

    @Override
    public MLMethod createNetwork() {
        MLMethodFactory methodFactory = new MLMethodFactory();
        MLMethod result = methodFactory.create("feedforward", "5:B->TANH->63:B->TANH->1", 5, 1);
        ((MLEncodable) result).decodeFromArray(WEIGHTS);
        return result;
    }
    static Object[][] helpMeNormalize = {
        {"name", "isclass", "iscomplete", "isint", "isreal", "amax", "amin", "mean", "sdev", "source"},
        {"field:1", 0, 1, 1, 1, 28, 0, 2.5559796438, 3.4466650355, ""},
        {"field:2", 0, 1, 1, 1, 3, 0, 0.3823155216, 0.5042619702, ""},
        {"field:3", 0, 1, 1, 1, 76, 6, 51.4699427481, 17.1256410848, ""},
        {"field:4", 0, 1, 1, 1, 8, 0, 1.4702608142, 1.2998604576, ""},
        {"field:5", 0, 1, 1, 1, 4, 0, 0.8201335878, 1.1979341771, ""},
        {"field:6", 0, 1, 1, 1, 1, -1, 0, 1, ""}
    };
    
    private static Point[] getAminAmaxPointArray(int fieldSize) {
        Point[] result= new Point[fieldSize];
//        System.out.println("helpmenorsize: "+helpMeNormalize.length);
        
        //minus 1 because we don't care about the one, that's the output. we want
        //inputs.
        for (int i = 1; i < helpMeNormalize.length-1; i++) {
            int amax=0;
            int amin=0;
            amax=(Integer) helpMeNormalize[i][5];
//            System.out.println("amax is: "+amax);
            amin=(Integer) helpMeNormalize[i][6];
//            System.out.println("amin is: "+amin);
            result[i-1]=new Point(amin,amax);
            
        }
        return result;
    }
    public static double[] NORMALIZE(double[] inputs) {
       Point[] AminAMax = getAminAmaxPointArray(inputs.length);
       double[] result = new double[inputs.length];
        for (int i = 0; i < inputs.length; i++) {
           result[i]=norm(AminAMax[i], inputs[i]);         
        }
        return result;
   

    }
     private static double norm(Point point, double d) {
       double min= point.x;
       double max= point.y;
       
         if (d<min) {
             return min;
         }
         if (d>max) {
             return max;
         }
         double diff=max-min;
         
         double nMax=1;
         double nMin=-1;
         
         double NormalizedDiff= nMax -nMin;
         
         // ((d-min)/diff) = x / NormalizedDiff;
         double x=(((d-min)*NormalizedDiff)/diff);
         return nMin+x;
    }
}
